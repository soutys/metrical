[DEFAULT]
log_level = INFO
period = 60

[output:graphite_gw]
plugin = graphite_gw
scheme = http
host = 127.0.0.1
port = 8003
uri = /graphite/collector/
hostname = graphite-host
gzip_level = 0
prefix = deployer.
cafile = ./ssl/ca.crt
cli_certfile = ./ssl/cli.crt
cli_keyfile = ./ssl/cli.key

[input:nginx_status]
plugin = nginx_status
scheme = http
host = 127.0.0.1
port = 80
uri = /basic_status
server_name = localhost
prefix = service.nginx.core.
absolute_keys = accepts,handled,requests

[input:nginx_access_log]
plugin = log_watch
period = 0
log_fpath = /var/log/nginx/access.log
prefix = service.nginx.access_log.
parser = metricol.inputs.plugins.nginx_logs.parse_log_lines
pattern = \[(?P<time>[^\]]{25})\] "(?P<method>[A-Z]{1,7}) /(?P<uri>.*?) HTTP/(?P<http>[.0-2]{3})" (?P<status>[0-9]{3}) (?P<rbytes>[0-9]+)/(?P<bbytes>[0-9]+) (?P<uctim>[-.0-9]{1,5})/(?P<uhtim>[-.0-9]{1,5})/(?P<urtim>[-.0-9]{1,5})/(?P<rtime>[-.0-9]{1,5}) (?P<gzip>[-.0-9]{1,5}) (?P<pipe>[p.]) (?P<creqs>[0-9]+)
method = search
counter_keys = method,uri,http,rbytes,bbytes
kv_keys = fun,http,lvl,method,status,uri,pipe
timer_keys = uctim,uhtim,urtim,rtime

[input:nginx_error_log]
plugin = log_watch
period = 0
log_fpath = /var/log/nginx/error.log
prefix = service.nginx.error_log.
parser = metricol.inputs.plugins.nginx_logs.parse_log_lines
pattern = (?P<time>[ 0-9:/+]{19}) \[(?P<lvl>[a-z]{1,9})\] [#:* 0-9]+ (?P<fun>\w+)\(\)
method = match
counter_keys = method,uri,http,rbytes,bbytes
kv_keys = fun,http,lvl,method,status,uri,pipe
timer_keys = uctim,uhtim,urtim,rtime

[input:redis_info]
plugin = redis_info
socket = /tmp/redis.sock
prefix = service.redis.
absolute_keys = evicted_keys,expired_keys,keyspace_hits,keyspace_misses,rejected_connections,total_commands_processed,total_connections_received

[input:uwsgi_app:1]
plugin = uwsgi_stats
scheme = http
host = 127.0.0.1
port = 11717
uri = /
server_name = localhost
prefix = service.uwsgi.app_www_1.

[input:uwsgi_app:2]
plugin = uwsgi_stats
scheme = http
host = 127.0.0.1
port = 11718
uri = /
server_name = localhost
prefix = service.uwsgi.app_www_2.

[input:meminfo]
plugin = meminfo
meminfo = /proc/meminfo
prefix = system.memory.

[input:load_info]
plugin = load_info
loadavg = /proc/loadavg
prefix = system.load_info.

[input:networking]
plugin = sys_class_net
interfaces = lo,eth0
prefix = system.network.

[input:disks_spaces]
plugin = disks_spaces
targets = /:root
prefix = system.disks_spaces.

[input:auth_log_sessions]
plugin = auth_log_watch
period = 0
log_fpath = /var/log/auth.log
prefix = service.auth.sessions.
parser = metricol.inputs.plugins.auth_log.parse_log_lines
pattern = (?P<time>[A-Za-z]+ [0-9]+ [:0-9]{8}) .+ session (?P<action>opened|closed) for user (?P<user>[a-z_][a-z0-9_-]*[$]?)
method = match

[input:auth_log_attempts]
plugin = auth_log_watch
period = 0
log_fpath = /var/log/auth.log
prefix = service.auth.attempts.
parser = metricol.inputs.plugins.auth_log.parse_log_lines
pattern = (?P<time>[A-Za-z]+ [0-9]+ [:0-9]{8}) .+ Accepted (?P<method>password|publickey) for (?P<user>[a-z_][a-z0-9_-]*[$]?) from
method = match

[input:mysql_status]
plugin = mysql_status
db_host = 127.0.0.1
db_port = 3306
db_user = root
db_pass =
prefix = service.mysql.status.
